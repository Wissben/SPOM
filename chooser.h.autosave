#ifndef CHOOSER_H
#define CHOOSER_H

#include <QWidget>
#include <string>
#include "opencv2/imgproc.hpp"
#include "opencv2/opencv.hpp"
#include "opencv2/highgui.hpp"
#include "selector.h"
#include "qprogressbar.h"
#include <QTimer>
namespace Ui {
class Chooser;
}

class Chooser : public QWidget
{
    Q_OBJECT

public:
    explicit Chooser(QWidget *parent = 0);
    ~Chooser();
    static void moyenne_Reccur(std::string path, double alpha,Chooser* c);

    static void gradiantOublieux(std::string pathToVideo , double alphaDeb,Chooser* c);

    static void sigmaDelta(std::string path);

    static void moyenne_Arith(std::string path ,Chooser* c);

    static void SAP(std::string path, int multiple, double alpha,Chooser* c);

    static void SD2(std::string path,int mul);

    static cv::Mat getBackGroundRGB_8UC3(std::string path,QProgressBar* s);

    static cv::Mat getForeGroundRGB_8UC3(cv::Mat image , cv::Mat mask);

    static void drawBoxesRGB_8UC3(cv::Mat* image,cv::Mat mask);

    static cv::Mat shadowRemoval_HSV(cv::Mat* image,cv::Mat backGround,Selector* s);

    static void showMultipleImage_8UC3(std::vector<cv::Mat>& images,char* windowName);

    static cv::Mat hist(cv::Mat gray);

public slots:
    
    void update();
    
private slots:
    void on_gradiantMorph_clicked();

    void on_pushButton_clicked();

    void on_alphaChooserSAP_valueChanged(int value);

    void on_NChooser_valueChanged(int arg1);

    void on_alphaChooserRec_valueChanged(int value);

    void on_recChooser_clicked();

    void on_gradiantChooser_clicked();

    void on_alphaChooserGrad_valueChanged(int value);

    void on_horizontalSlider_valueChanged(int value);

    void on_horizontalSlider_sliderReleased();

    void on_horizontalSlider_sliderPressed();

    void on_Chooser_destroyed();

    void on_arithChooser_clicked();

    void on_arithChooser_clicked(bool checked);

    void on_SAPChooser_clicked(bool checked);

public:
    QTimer timer;
    Ui::Chooser *ui;
    bool valueChanged;
};

#endif // CHOOSER_H
